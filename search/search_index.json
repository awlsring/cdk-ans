{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"cdk-ans","text":"<p>cdkans is a framework for defining Ansible playbooks in a CDK-esq way, following concepts that power other CDK frameworks such as AWS CDK, CDKTF, and CDK8s. This project currently is in an alpha state and there may be breaking changes as it is developed.</p>"},{"location":"#packages","title":"Packages","text":"<p>This repository is a monorepo containing the following packages:</p> <ul> <li><code>cdk-ans</code> - The core framework for defining Ansible playbooks.</li> <li><code>cdk-ans-cli</code> - A CLI for working with cdk-ans. This currently only supports code generation for Anisble modules.</li> </ul>"},{"location":"#roadmap","title":"Roadmap","text":"<p>Currently this project is in alpha. Most critical features for defining playbooks are implemented, but there are several small additions to make / QOL features to add.</p> <p>Some future feature targets are...</p> <ul> <li>Pregenerated modules as consumable constrcut libraries.</li> <li>Project template generation</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":"<p>These are a few steps to help get started with cdk-ans. This guide assumes you are at least somewhat familiar with Ansible. If you are completely new, it is recommended to go through the Ansible documentation first and to familiarize yourself with the basics.</p> <p>To follow along, you will need to have Node.js installed.</p> <p>You will also need to install the <code>cdk-ans-cli</code>. This can be done with the following command. <pre><code>npm install -g cdk-ans-cli\n</code></pre></p>"},{"location":"getting-started/#create-a-new-project","title":"Create a new project","text":""},{"location":"getting-started/#project-setup","title":"Project setup","text":"<p>Long term this will be done with a CLI, but for now you will need to do most setup on your own. To follow this, you will need to create a new typescript project.</p> <pre><code>mkdir my-cdk-ans-project\ncd my-cdk-ans-project\nnpm init -y\nnpm install --save-dev typescript\nnpm install --save-dev ts-node\nnpx tsc --init\n</code></pre> <p>In your <code>package.json</code> and the following code to your scripts section... <pre><code>\"scripts\": {\n\"synth\": \"ts-node src/main.ts\"\n}\n</code></pre></p> <p>In your <code>tsconfig.json</code> file, add the following to the <code>compilerOptions</code> section... <pre><code>  \"compilerOptions\": {\n\"rootDir\": \"src\",\n\"outDir\": \"lib\",\n...more options...\n}\n</code></pre></p> <p>After your project is setup, create a new directory called <code>src</code> and create an empty <code>main.ts</code> file.</p>"},{"location":"getting-started/#install-cdk-ans","title":"Install cdk-ans","text":"<p>Once the project workspace is setup, you will need to install the <code>cdk-ans</code> package. This can be done with the following command.</p> <pre><code>npm install --save-dev cdk-ans\n</code></pre> <p>Once <code>cdk-ans</code> is installed, you can now add the following to your <code>main.ts</code> file.</p> <pre><code>import { App, Project } from 'cdk-ans';\nconst app = new App();\nnew Project(app, 'test-project');\napp.synth();\n</code></pre> <p>The next section will cover what these actually do.</p>"},{"location":"getting-started/#apps-and-projects","title":"Apps and Projects","text":"<p>Apps are structured as a tree of projects. Projects are the container for ansible resources (inventories, playbooks, and roles), and are composed of a collection of constructs, which allow for abstractions in defining these resources. Details on utilizing these resources will be covered in later sections.</p> <p>This initial code created in the section prior defines an app with a single empty project. When synthesized, this app will generate a directory for each project defined with sub directories and yaml files generated for the various resources that were defined.</p> <p>To see the output of this, you can synthesize your project by running the main file with the command <code>npm run synth</code>.</p> <p>After running this command, an empty directory <code>test-project</code> will have been generated in your <code>dist</code> directory.</p>"},{"location":"getting-started/#addings-resources","title":"Addings resources","text":"<p>Different types of resources can be added to a project. There are 3 high level resources, <code>Inventory</code>, <code>Playbook</code>, and <code>Role</code>. Each of these resources when added to a project will generate subdirectories and yaml files for the resource. Below we will cover how to quickly added each of these resources to your project. More details on these types of resources can be found in the concepts section.</p> <p>In the code below, we will add an inventory that creates a localhost, a role that echoes a string, and a playbook that uses that role.</p> <pre><code>//create the host and inventory\nconst localhost = new Host(project, 'localhost', {\nhost: 'localhost',\n});\nnew Inventory(project, 'inventory', {\nhosts: [localhost],\n});\n// create the role\nconst task = new Task(project, 'test-command', {\naction: new TaskAction('command', {\ncmd: 'echo hello world',\n}),\n});\nconst role= new Role(project, 'echoer', {\nname: 'echoer',\ntasks: task,\n});\n// define the playbook\nconst play = new Play(project, 'play', {\nname: 'Echo play',\nhosts: [localhost],\nroles: RoleTarget.fromRole(project, 'target', role),\n});\nnew Playbook(project, 'playbook', {\nplayDefinition: play,\n});\n</code></pre> <p>After adding this code, you can run <code>npm run synth</code> to build your project. You should now see a directory structure like the following.</p> <pre><code>dist\n\u2514\u2500\u2500 test-project\n    \u251c\u2500\u2500 playbook.yaml\n    \u251c\u2500\u2500 inventories\n    \u2502   \u2514\u2500\u2500 inventory\n    \u2502       \u2514\u2500\u2500 hosts.yaml\n    \u2514\u2500\u2500 roles\n        \u2514\u2500\u2500 echoer\n            \u2514\u2500\u2500 tasks\n                \u2514\u2500\u2500 main.yml\n</code></pre>"},{"location":"concepts/overview/","title":"CDK-ANS Overview","text":"<p>Todo! coming soon!</p>"}]}